flowchart
    importOS(import os)
    importSleep(import sleep)
    
    importMsvcrt(import msvcrt)
    everythingFromBackend(import everything from backend)
    consoleImport(import console from rich.console)
    RidesCsv('call' rides from csv and store it in a variable called rides.csv)
    listOfAllRides(create variable list_of_rides, storing 'Here is a list of all the rides:\n')
    lastItemInRidesKeys(is this the last item in the keys of rides)
    addToListOfRides(add the index and the ride_name in a formatted string)
    clearTerminal(clear the terminal)
    greeting(print 'Welcome to the Amusement Park!')
    waitAndPrint[/Wait 1 seconds, then print list_of_rides/]
    askUserForRides[/Ask user what ride they want to go to, and store to user_ride/]
    ifUserQ{does user_ride = q?}
    PrintSleep(print 'Thank you for visiting the Amusement Park!')
    endBlock((End))
    getUserRideKey(get the value from list rides.keys at index user_ride casted to int - 1)
    printUserRide(print the user_ride)
    userRideNumber{is user_ride a number?}
    printInputInvalid(print 'Input is invalid. Please try again.')
    ridesEqualToWeirdNumber(is attribute user_range in the Ride Object accessed from the key equal to 0, 999999999?)
    dispRide(display ride using the argument rides[user_ride])
    printCheckAge(print stating that they need to check the age)
    askAge[/ask user for their age/]
    ridesCheckAge{does the ride_check method accessed by the user_ride in rides return true?}
    displayRide(display ride using the argument rides[user_ride])
    printInvalidAge[/print 'Sorry we can't let you go in.\n'/]
    printQtoReturnBack[/print 'Hit q to return back.'/]
    QuitNoInput[/'call' quit_no_input/]